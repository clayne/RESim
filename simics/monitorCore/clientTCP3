#!/usr/bin/env python3
#
#  Send a file to a given host/port using tcp
#
import sys
import time
import os
import socket
import logging
import logging.handlers
import argparse

def sendTCP(host, port, infile_list, lgr):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    server_addr = (host, port)
    #server_addr = ('localhost', port)
    while True:
        try:
            sock.connect(server_addr)
            lgr.debug('connect ok')
            break
        except(socket.error) as e:
            lgr.debug('connect fail %s' % e)
            time.sleep(1)
            
    for infile in infile_list:    
        with open (infile, 'rb') as fh:
            s = fh.read()
            sock.sendall(s) 
            lgr.debug('sent %d bytes' % len(s))
            got = sock.recv(1024)
            lgr.debug('got %s' % got)
            time.sleep(1)
    
def main():
    parser = argparse.ArgumentParser(prog='clientTCP3', description='Send file content as TCP to a target.')
    parser.add_argument('-i', '--ip', action='store', help='IP address.')
    parser.add_argument('-p', '--port', action='store', type=int, help='Port number.')
    parser.add_argument('-f', '--file', action='store', help='File list.')
    lgr = logging.getLogger('clientTCPlog')
    #lhStdout = lgr.handlers[0]
    lgr.setLevel(logging.DEBUG)
    fh = logging.FileHandler('/tmp/clientTCP.log')
    fh.setLevel(logging.DEBUG)
    frmt = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    fh.setFormatter(frmt)
    lgr.addHandler(fh)
    #lgr.addHandler(logging.handlers.DatagramHandler('172.20.107.155', 51010))
    #lgr.removeHandler(lhStdout)
    lgr.info('Start of log from clientTCP')
    print('begin')
    args = parser.parse_args()
    file_list = args.file.split()
    sendTCP(args.ip, args.port, file_list, lgr)

if __name__ == '__main__':
    sys.exit(main())
